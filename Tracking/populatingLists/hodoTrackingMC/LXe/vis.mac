#vis.mac for VLXe/hodoscope style detectors
#
# Macro file for the initialization phase of "LXe.cc"
# when runing in interactive mode
#
# Sets some default verbose
#
/run/initialize
/run/verbose 0
/control/verbose 0
/tracking/verbose 0
#
# Create a scene handler/viewer for a specific graphics system
#    The compound command "/vis/open <vis-driver-name>"
#    is equivalent to the following set of commands:
#
#    /vis/sceneHandler/create
#    /vis/viewer/create
#
# Create a scene handler and a viewer for the OGLIX driver
/vis/open OGL 600x600-0+0
#
/vis/viewer/set/style wireframe
# Set direction from target to camera.
#/vis/viewer/set/viewpointVector 1 1.5 1.1
/vis/viewer/set/viewpointThetaPhi 90 0
/vis/viewer/zoom 1
#
#    The compound command "/vis/drawVolume"
#    is equivalent to the following set of commands:
#
#    /vis/scene/create
#    /vis/scene/add/volume
#    /vis/sceneHandler/attach
# Create an empty scene and add the detector geometry to it
/vis/drawVolume
#
# Store particle trajectories for visualization
# (if too many tracks cause core dump => storeTrajectory 0)
/tracking/storeTrajectory 1
#
# Add trajectories to the current scene
# Note: This command is not necessary since the C++ method DrawTrajectory()
#       is called in LXeEventAction::EndOfEventAction
/vis/scene/add/trajectories
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 2
#magic helpful line???
/LXe/forceDrawPhotons true
#
# colors for components
/vis/geometry/set/colour housing_log 0 1 1 1 1
/vis/geometry/set/colour Aluminum 0 .5 .75 .75 1
/vis/geometry/set/colour scint_log 0 .4 .7 1 1
/vis/geometry/set/colour pmt_log 0 1 .3 .8 1
/vis/geometry/set/colour photocath_log 0 1 .3 .8 1
#
# Requests viewer to accumulate hits, tracks, etc. at end of event. 
# detector remains or is redrawn.
/vis/scene/endOfEventAction accumulate
/vis/viewer/set/autoRefresh true
/vis/verbose warnings